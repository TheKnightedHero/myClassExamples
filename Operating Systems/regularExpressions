10/3/18
Regular Expressions

A regular expression is a pattern/template to be matched against a string (llama book pg. 76)

Sample use:
$ grep "include" *.cpp        #The string include is a regular expression
$ grep "ab*c" myFile.txt      #Find all the lines that contain the letter 'a' followed by 0 or more b's followed by a 'c'

while($line = <STDIN>)         # while not end of file
{
  chomp $line;
  if($line =~ /ab*c/)       # ~ means does this line match the expression
  {
    print "MATCHES";
  }
  else
  {
    print "DOES NOT MATCH";
  }
  print "\n\n";
}


^&  is called an anchor.
we can use this by changing the expression /ab*c to /^ab*c$/   This means that
the string we are looking for MUST start with a, have 0 or more b's, followed by a c and then an endline character

supercalifragilisticexpialidocious



for phone number example, phone format is: (321)794-1068


lecture:
HW Answer:
1b)  ^\\+\++$

hint for hard questions:
^consonants(a|A)consonants(e|E)$

define class of consonants:





JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC

Format dates so they look like the below format options:
JAN 3,1992
MAR 30, 2016
APR 03, 2018

(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC)

how to get the days:
(0?[1-9]|[]12]\d|3[01])

how to get the year:
(19|20)\d\d

(JAN|FEB|MAR|APR|MAY|JUN|JUL|AUG|SEP|OCT|NOV|DEC) (0?[1-9]|[]12]\d|3[01]), (19|20)\d\d
