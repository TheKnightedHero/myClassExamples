Can have multilevel inheritance
DSPL = Domain Specific Programming Language - a language a programmer creates for a project


polygon - any number of points and connect dots


In inheritance, functions can be overridden (overwrite)

we have a base class and a derived class

base - derived
parent - child
super - sub


The base class is what we started with  - parent class
the derived class is what we expand with - child class

chosen at run-time not compile time.
The run time choice is called late binding, also known as dynamic binding
function is called based on object type

Early binding also known as static binding is the traditional way
function is called based on pointer/reference type


virtual - function is going to use late/dynamic binding
this behavior on when binding happens is referred to polymorphism


9/28/18 video
A function call is a jump
Static binding will decide at compile time where it is going to jump.
dynamic binding the compiler doesn't know where to jump, it is dependent on the object This is decided at run time

Protected in the base class,

Methods in a class should ALWAYS be virtual
A method that is made virtual, remains virtual forever down the inheritance hierarchy
virtual - Given a pointer or reference from an ancestor type, if you call a function, it will call it based off the object you have
